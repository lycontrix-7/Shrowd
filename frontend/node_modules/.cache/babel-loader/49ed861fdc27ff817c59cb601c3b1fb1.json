{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/lycontrix/Development/Shrowd/frontend/frontend/src/Create.js\";\nimport React, { Component } from 'react';\nexport default class Create extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      message: ''\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleChange(e) {\n    this.setState({\n      name: e.target.value\n    });\n  }\n\n  handleSubmit() {\n    const requestOptions = {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        name: this.state.name\n      })\n    };\n    fetch('http://127.0.0.1:8000/api/create/', requestOptions).then(response => response.json()).then(data => (data.name[0] === \"this field may not be blank.\" ? this.setState({\n      message: data.name\n    }) : this.props.history.push(\"/s/\" + data.name)) || data.name[0] === \"server with this name already exists.\" ? this.setState({\n      message: data.name\n    }) : this.props.history.push(\"/s/\" + data.name));\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Create\",\n      children: [this.state.message, /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        onChange: this.handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: this.handleSubmit,\n        children: \"Create\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/Users/lycontrix/Development/Shrowd/frontend/frontend/src/Create.js"],"names":["React","Component","Create","constructor","props","state","message","handleChange","bind","handleSubmit","e","setState","name","target","value","requestOptions","method","headers","body","JSON","stringify","fetch","then","response","json","data","history","push","render"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AAEA,eAAe,MAAMC,MAAN,SAAqBD,SAArB,CAA+B;AAC1CE,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACTC,MAAAA,OAAO,EAAE;AADA,KAAb;AAIA,SAAKC,YAAL,GAAoB,KAAKA,YAAL,CAAkBC,IAAlB,CAAuB,IAAvB,CAApB;AACA,SAAKC,YAAL,GAAoB,KAAKA,YAAL,CAAkBD,IAAlB,CAAuB,IAAvB,CAApB;AACH;;AAIDD,EAAAA,YAAY,CAAEG,CAAF,EAAK;AACb,SAAKC,QAAL,CAAc;AACVC,MAAAA,IAAI,EAAEF,CAAC,CAACG,MAAF,CAASC;AADL,KAAd;AAGH;;AAEDL,EAAAA,YAAY,GAAI;AACZ,UAAMM,cAAc,GAAG;AACnBC,MAAAA,MAAM,EAAE,MADW;AAEnBC,MAAAA,OAAO,EAAE;AAAC,wBAAiB;AAAlB,OAFU;AAGnBC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACjBR,QAAAA,IAAI,EAAE,KAAKP,KAAL,CAAWO;AADA,OAAf;AAHa,KAAvB;AAOAS,IAAAA,KAAK,CAAC,mCAAD,EAAsCN,cAAtC,CAAL,CACKO,IADL,CACWC,QAAD,IAAcA,QAAQ,CAACC,IAAT,EADxB,EAEKF,IAFL,CAEWG,IAAD,IAAY,CAAEA,IAAI,CAACb,IAAL,CAAU,CAAV,MAAiB,8BAAlB,GAClB,KAAKD,QAAL,CAAc;AAACL,MAAAA,OAAO,EAAEmB,IAAI,CAACb;AAAf,KAAd,CADkB,GACqB,KAAKR,KAAL,CAAWsB,OAAX,CAAmBC,IAAnB,CAAwB,QAAQF,IAAI,CAACb,IAArC,CADtB,KAEjBa,IAAI,CAACb,IAAL,CAAU,CAAV,MAAiB,uCAFA,GAGjB,KAAKD,QAAL,CAAc;AAACL,MAAAA,OAAO,EAAEmB,IAAI,CAACb;AAAf,KAAd,CAHiB,GAGsB,KAAKR,KAAL,CAAWsB,OAAX,CAAmBC,IAAnB,CAAwB,QAAQF,IAAI,CAACb,IAArC,CAL5C;AAMC;;AAELgB,EAAAA,MAAM,GAAG;AACL,wBACI;AAAK,MAAA,SAAS,EAAC,QAAf;AAAA,iBACK,KAAKvB,KAAL,CAAWC,OADhB,eAEI;AAAO,QAAA,IAAI,EAAC,MAAZ;AAAmB,QAAA,QAAQ,EAAE,KAAKC;AAAlC;AAAA;AAAA;AAAA;AAAA,cAFJ,eAGI;AAAQ,QAAA,OAAO,EAAE,KAAKE,YAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAOH;;AA3CyC","sourcesContent":["import React, { Component } from 'react';\n\nexport default class Create extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            message: ''\n        }\n\n        this.handleChange = this.handleChange.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n\n    \n\n    handleChange (e) {\n        this.setState({\n            name: e.target.value\n        });\n    }\n\n    handleSubmit () {\n        const requestOptions = {\n            method: 'POST',\n            headers: {'Content-Type' : 'application/json'},\n            body: JSON.stringify({\n                name: this.state.name\n            }),\n        };\n        fetch('http://127.0.0.1:8000/api/create/', requestOptions)\n            .then((response) => response.json())\n            .then((data) => ((((data.name[0] === \"this field may not be blank.\") ? \n            (this.setState({message: data.name})) : this.props.history.push(\"/s/\" + data.name)) || \n            (data.name[0] === \"server with this name already exists.\") ? \n            (this.setState({message: data.name})) : this.props.history.push(\"/s/\" + data.name))))\n        }\n\n    render() {\n        return(\n            <div className=\"Create\">\n                {this.state.message}\n                <input type=\"text\" onChange={this.handleChange}></input>\n                <button onClick={this.handleSubmit}>Create</button>\n            </div>\n        );\n    }\n}"]},"metadata":{},"sourceType":"module"}