{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/lycontrix/Development/Shrowd/frontend/frontend/src/Create.js\";\nimport React, { Component } from 'react';\nexport default class Create extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      message: '',\n      server_type: '',\n      name: ''\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleChange(e) {\n    this.setState({\n      name: e.target.value\n    });\n  }\n\n  handleSubmit() {\n    const requestOptions = {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        name: this.state.name,\n        password: this.state.password\n      })\n    };\n    fetch('http://127.0.0.1:8000/api/' + this.state.server_type + '/create/', requestOptions).then(response => {\n      if (response.ok) {\n        this.props.history.push(\"/\" + this.state.server_type + \"/\" + this.state.name);\n      } else {\n        this.setState({\n          message: response.statusText\n        });\n      }\n    }); // Alt way:\n    // (data.name[0] === \"server with this name already exists.\") ? \n    // (this.setState({message: data.name})) : (this.props.history.push(\"/s/\" + data.name))   \n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Create\",\n      children: [this.state.message, /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        onChange: this.handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }, this), \"Please select your age:\", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"radio\",\n        id: \"public-server\",\n        name: \"server-type\",\n        onChange: this.setState({\n          name: \"s\"\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        for: \"public-server\",\n        children: \"Public\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 58\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"radio\",\n        id: \"private-server\",\n        name: \"server-type\",\n        value: \"p\",\n        onChange: this.setState({\n          name: \"p\"\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        for: \"private-server\",\n        children: \"Private\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 60\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: this.handleSubmit,\n        children: \"Create\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/Users/lycontrix/Development/Shrowd/frontend/frontend/src/Create.js"],"names":["React","Component","Create","constructor","props","state","message","server_type","name","handleChange","bind","handleSubmit","e","setState","target","value","requestOptions","method","headers","body","JSON","stringify","password","fetch","then","response","ok","history","push","statusText","render"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AAEA,eAAe,MAAMC,MAAN,SAAqBD,SAArB,CAA+B;AAC1CE,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACTC,MAAAA,OAAO,EAAE,EADA;AAETC,MAAAA,WAAW,EAAE,EAFJ;AAGTC,MAAAA,IAAI,EAAE;AAHG,KAAb;AAMA,SAAKC,YAAL,GAAoB,KAAKA,YAAL,CAAkBC,IAAlB,CAAuB,IAAvB,CAApB;AACA,SAAKC,YAAL,GAAoB,KAAKA,YAAL,CAAkBD,IAAlB,CAAuB,IAAvB,CAApB;AAEH;;AAEDD,EAAAA,YAAY,CAAEG,CAAF,EAAK;AACb,SAAKC,QAAL,CAAc;AACVL,MAAAA,IAAI,EAAEI,CAAC,CAACE,MAAF,CAASC;AADL,KAAd;AAGH;;AAGDJ,EAAAA,YAAY,GAAI;AACZ,UAAMK,cAAc,GAAG;AACnBC,MAAAA,MAAM,EAAE,MADW;AAEnBC,MAAAA,OAAO,EAAE;AAAC,wBAAiB;AAAlB,OAFU;AAGnBC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACjBb,QAAAA,IAAI,EAAE,KAAKH,KAAL,CAAWG,IADA;AAEjBc,QAAAA,QAAQ,EAAE,KAAKjB,KAAL,CAAWiB;AAFJ,OAAf;AAHa,KAAvB;AAQAC,IAAAA,KAAK,CAAC,+BAA+B,KAAKlB,KAAL,CAAWE,WAA1C,GAAwD,UAAzD,EAAqES,cAArE,CAAL,CACKQ,IADL,CACWC,QAAD,IAAc;AAChB,UAAIA,QAAQ,CAACC,EAAb,EAAiB;AACb,aAAKtB,KAAL,CAAWuB,OAAX,CAAmBC,IAAnB,CAAwB,MAAM,KAAKvB,KAAL,CAAWE,WAAjB,GAA+B,GAA/B,GAAqC,KAAKF,KAAL,CAAWG,IAAxE;AACH,OAFD,MAGK;AACD,aAAKK,QAAL,CAAc;AAACP,UAAAA,OAAO,EAAEmB,QAAQ,CAACI;AAAnB,SAAd;AACH;AACJ,KARL,EATY,CAkBR;AACA;AACA;AACH;;AAELC,EAAAA,MAAM,GAAG;AACL,wBACI;AAAK,MAAA,SAAS,EAAC,QAAf;AAAA,iBACK,KAAKzB,KAAL,CAAWC,OADhB,eAEI;AAAO,QAAA,IAAI,EAAC,MAAZ;AAAmB,QAAA,QAAQ,EAAE,KAAKG;AAAlC;AAAA;AAAA;AAAA;AAAA,cAFJ,0CAKI;AAAO,QAAA,IAAI,EAAC,OAAZ;AAAoB,QAAA,EAAE,EAAC,eAAvB;AAAuC,QAAA,IAAI,EAAC,aAA5C;AAA0D,QAAA,QAAQ,EAAE,KAAKI,QAAL,CAAc;AAACL,UAAAA,IAAI,EAAE;AAAP,SAAd;AAApE;AAAA;AAAA;AAAA;AAAA,cALJ,eAMI;AAAO,QAAA,GAAG,EAAC,eAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cANJ,eAM6C;AAAA;AAAA;AAAA;AAAA,cAN7C,eAOI;AAAO,QAAA,IAAI,EAAC,OAAZ;AAAoB,QAAA,EAAE,EAAC,gBAAvB;AAAwC,QAAA,IAAI,EAAC,aAA7C;AAA2D,QAAA,KAAK,EAAC,GAAjE;AAAqE,QAAA,QAAQ,EAAE,KAAKK,QAAL,CAAc;AAACL,UAAAA,IAAI,EAAE;AAAP,SAAd;AAA/E;AAAA;AAAA;AAAA;AAAA,cAPJ,eAQI;AAAO,QAAA,GAAG,EAAC,gBAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cARJ,eAQ+C;AAAA;AAAA;AAAA;AAAA,cAR/C,eAUI;AAAQ,QAAA,OAAO,EAAE,KAAKG,YAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAVJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAcH;;AA3DyC","sourcesContent":["import React, { Component } from 'react';\n\nexport default class Create extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            message: '',\n            server_type: '',\n            name: '',\n        }\n\n        this.handleChange = this.handleChange.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n       \n    }\n\n    handleChange (e) {\n        this.setState({\n            name: e.target.value\n        });\n    }\n\n\n    handleSubmit () {\n        const requestOptions = {\n            method: 'POST',\n            headers: {'Content-Type' : 'application/json'},\n            body: JSON.stringify({\n                name: this.state.name,\n                password: this.state.password\n            }),\n        };\n        fetch('http://127.0.0.1:8000/api/' + this.state.server_type + '/create/', requestOptions)\n            .then((response) => {\n                if (response.ok) {\n                    this.props.history.push(\"/\" + this.state.server_type + \"/\" + this.state.name)\n                }\n                else {\n                    this.setState({message: response.statusText})\n                }\n            })\n            // Alt way:\n            // (data.name[0] === \"server with this name already exists.\") ? \n            // (this.setState({message: data.name})) : (this.props.history.push(\"/s/\" + data.name))   \n        }\n\n    render() {\n        return(\n            <div className=\"Create\">\n                {this.state.message}\n                <input type=\"text\" onChange={this.handleChange}/>\n\n                Please select your age:\n                <input type=\"radio\" id=\"public-server\" name=\"server-type\" onChange={this.setState({name: \"s\"})}/>\n                <label for=\"public-server\">Public</label><br/>\n                <input type=\"radio\" id=\"private-server\" name=\"server-type\" value=\"p\" onChange={this.setState({name: \"p\"})}/>\n                <label for=\"private-server\">Private</label><br/>\n\n                <button onClick={this.handleSubmit}>Create</button>\n            </div>\n        );\n    }\n}"]},"metadata":{},"sourceType":"module"}