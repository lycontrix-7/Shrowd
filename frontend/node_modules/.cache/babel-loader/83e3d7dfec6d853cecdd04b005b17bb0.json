{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/lycontrix/Development/Shrowd/frontend/frontend/src/Join.js\";\nimport React, { Component } from 'react';\nimport { TextField, Button, Grid, Typography, Link, ButtonGroup, FormControl, FormHelperText, FormControlLabel, Radio, RadioGroup } from \"@material-ui/core\";\nexport default class Join extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      message: '',\n      server_type: '',\n      password: ''\n    };\n    this.handleNameChange = this.handleNameChange.bind(this);\n    this.handlePasswordChange = this.handlePasswordChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleType = this.handleType.bind(this);\n  }\n\n  handleNameChange(e) {\n    this.setState({\n      name: e.target.value\n    });\n  }\n\n  handlePasswordChange(e) {\n    this.setState({\n      password: e.target.value\n    });\n  }\n\n  handleType(e) {\n    this.setState({\n      server_type: e.target.value\n    });\n  }\n\n  handleSubmit() {\n    const requestOptions = {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        name: this.state.name,\n        password: this.state.password\n      })\n    };\n    fetch('http://127.0.0.1:8000/api/' + this.state.server_type + '/join/', requestOptions).then(response => {\n      if (response.ok) {\n        var setString = 'AllowedTo_' + this.state.name;\n        localStorage.setItem(setString, true);\n        this.props.history.push(\"/\" + this.state.server_type + \"/\" + this.state.name);\n      } else {\n        this.setState({\n          message: response.statusText\n        });\n      }\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Join\",\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        spacing: 1,\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          align: \"center\",\n          children: /*#__PURE__*/_jsxDEV(Collapse, {\n            in: this.state.errorMsg != \"\" || this.state.successMsg != \"\",\n            children: this.state.successMsg != \"\" ? /*#__PURE__*/_jsxDEV(Alert, {\n              severity: \"success\",\n              onClose: () => {\n                this.setState({\n                  successMsg: \"\"\n                });\n              },\n              children: this.state.successMsg\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 68,\n              columnNumber: 15\n            }, this) : /*#__PURE__*/_jsxDEV(Alert, {\n              severity: \"error\",\n              onClose: () => {\n                this.setState({\n                  errorMsg: \"\"\n                });\n              },\n              children: this.state.errorMsg\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 77,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          align: \"center\",\n          children: /*#__PURE__*/_jsxDEV(Typography, {\n            component: \"h4\",\n            variant: \"h4\",\n            children: title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          align: \"center\",\n          children: /*#__PURE__*/_jsxDEV(FormControl, {\n            component: \"fieldset\",\n            children: [/*#__PURE__*/_jsxDEV(FormHelperText, {\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                align: \"center\",\n                children: \"Guest Control of Playback State\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 96,\n                columnNumber: 15\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 95,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(RadioGroup, {\n              row: true,\n              defaultValue: this.props.guestCanPause.toString(),\n              onChange: this.handleGuestCanPauseChange,\n              children: [/*#__PURE__*/_jsxDEV(FormControlLabel, {\n                value: \"true\",\n                control: /*#__PURE__*/_jsxDEV(Radio, {\n                  color: \"primary\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 105,\n                  columnNumber: 26\n                }, this),\n                label: \"Play/Pause\",\n                labelPlacement: \"bottom\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 103,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(FormControlLabel, {\n                value: \"false\",\n                control: /*#__PURE__*/_jsxDEV(Radio, {\n                  color: \"secondary\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 111,\n                  columnNumber: 26\n                }, this),\n                label: \"No Control\",\n                labelPlacement: \"bottom\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 109,\n                columnNumber: 15\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 98,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          align: \"center\",\n          children: /*#__PURE__*/_jsxDEV(FormControl, {\n            children: [/*#__PURE__*/_jsxDEV(TextField, {\n              required: true,\n              type: \"number\",\n              onChange: this.handleVotesChange,\n              defaultValue: this.state.votesToSkip,\n              inputProps: {\n                min: 1,\n                style: {\n                  textAlign: \"center\"\n                }\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 120,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(FormHelperText, {\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                align: \"center\",\n                children: \"Votes Required To Skip Song\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 131,\n                columnNumber: 15\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 130,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 9\n        }, this), this.props.update ? this.renderUpdateButtons() : this.renderCreateButtons()]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }, this), this.state.message, \"Name:\", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        onChange: this.handleNameChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 70\n      }, this), \"Password:\", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        onChange: this.handlePasswordChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 74\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 79\n      }, this), \"Server Type:\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 29\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"radio\",\n        id: \"public-server\",\n        name: \"server-type\",\n        value: \"s\",\n        onChange: this.handleType\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"public-server\",\n        children: \"Public\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 62\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"radio\",\n        id: \"private-server\",\n        name: \"server-type\",\n        value: \"p\",\n        onChange: this.handleType\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"private-server\",\n        children: \"Private\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 64\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 69\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: this.handleSubmit,\n        children: \"Create\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/Users/lycontrix/Development/Shrowd/frontend/frontend/src/Join.js"],"names":["React","Component","TextField","Button","Grid","Typography","Link","ButtonGroup","FormControl","FormHelperText","FormControlLabel","Radio","RadioGroup","Join","constructor","props","state","message","server_type","password","handleNameChange","bind","handlePasswordChange","handleSubmit","handleType","e","setState","name","target","value","requestOptions","method","headers","body","JSON","stringify","fetch","then","response","ok","setString","localStorage","setItem","history","push","statusText","render","errorMsg","successMsg","title","guestCanPause","toString","handleGuestCanPauseChange","handleVotesChange","votesToSkip","min","style","textAlign","update","renderUpdateButtons","renderCreateButtons"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { TextField, Button, Grid, Typography, Link, ButtonGroup, FormControl, FormHelperText, FormControlLabel, Radio, RadioGroup } from \"@material-ui/core\";\n\nexport default class Join extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            message: '',\n            server_type: '',\n            password: '',\n        }\n\n        this.handleNameChange = this.handleNameChange.bind(this);\n        this.handlePasswordChange = this.handlePasswordChange.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n        this.handleType = this.handleType.bind(this);\n    }\n\n    handleNameChange (e) {\n        this.setState({\n            name: e.target.value\n        });\n    }\n\n    handlePasswordChange (e) {\n        this.setState({\n            password: e.target.value\n        });\n    }\n\n    handleType (e) {\n        this.setState({\n            server_type: e.target.value\n        });\n    }\n\n    handleSubmit () {\n        const requestOptions = {\n            method: 'POST',\n            headers: {'Content-Type' : 'application/json'},\n            body: JSON.stringify({\n                name: this.state.name,\n                password: this.state.password\n            }),\n        };\n        fetch('http://127.0.0.1:8000/api/' + this.state.server_type + '/join/', requestOptions)\n            .then((response) => {\n                if (response.ok) {\n                    var setString = 'AllowedTo_' + this.state.name\n                    localStorage.setItem(setString, true);\n                    this.props.history.push(\"/\" + this.state.server_type + \"/\" + this.state.name)\n                }\n                else {\n                    this.setState({message: response.statusText})\n                }\n            })\n        }\n\n    render() {\n        return(\n            <div className=\"Join\">\n                <Grid container spacing={1}>\n        <Grid item xs={12} align=\"center\">\n          <Collapse\n            in={this.state.errorMsg != \"\" || this.state.successMsg != \"\"}\n          >\n            {this.state.successMsg != \"\" ? (\n              <Alert\n                severity=\"success\"\n                onClose={() => {\n                  this.setState({ successMsg: \"\" });\n                }}\n              >\n                {this.state.successMsg}\n              </Alert>\n            ) : (\n              <Alert\n                severity=\"error\"\n                onClose={() => {\n                  this.setState({ errorMsg: \"\" });\n                }}\n              >\n                {this.state.errorMsg}\n              </Alert>\n            )}\n          </Collapse>\n        </Grid>\n        <Grid item xs={12} align=\"center\">\n          <Typography component=\"h4\" variant=\"h4\">\n            {title}\n          </Typography>\n        </Grid>\n        <Grid item xs={12} align=\"center\">\n          <FormControl component=\"fieldset\">\n            <FormHelperText>\n              <div align=\"center\">Guest Control of Playback State</div>\n            </FormHelperText>\n            <RadioGroup\n              row\n              defaultValue={this.props.guestCanPause.toString()}\n              onChange={this.handleGuestCanPauseChange}\n            >\n              <FormControlLabel\n                value=\"true\"\n                control={<Radio color=\"primary\" />}\n                label=\"Play/Pause\"\n                labelPlacement=\"bottom\"\n              />\n              <FormControlLabel\n                value=\"false\"\n                control={<Radio color=\"secondary\" />}\n                label=\"No Control\"\n                labelPlacement=\"bottom\"\n              />\n            </RadioGroup>\n          </FormControl>\n        </Grid>\n        <Grid item xs={12} align=\"center\">\n          <FormControl>\n            <TextField\n              required={true}\n              type=\"number\"\n              onChange={this.handleVotesChange}\n              defaultValue={this.state.votesToSkip}\n              inputProps={{\n                min: 1,\n                style: { textAlign: \"center\" },\n              }}\n            />\n            <FormHelperText>\n              <div align=\"center\">Votes Required To Skip Song</div>\n            </FormHelperText>\n          </FormControl>\n        </Grid>\n        {this.props.update\n          ? this.renderUpdateButtons()\n          : this.renderCreateButtons()}\n      </Grid>\n            \n                {this.state.message}\n                Name:\n                <input type=\"text\" onChange={this.handleNameChange}/><br/>\n                Password:\n                <input type=\"text\" onChange={this.handlePasswordChange}/><br/><br/>               \n                \n                Server Type:<br/>\n                <input type=\"radio\" id=\"public-server\" name=\"server-type\" value=\"s\" onChange={this.handleType}/>\n                <label htmlFor=\"public-server\">Public</label><br/>\n                <input type=\"radio\" id=\"private-server\" name=\"server-type\" value=\"p\" onChange={this.handleType}/>\n                <label htmlFor=\"private-server\">Private</label><br/><br/>\n\n                <button onClick={this.handleSubmit}>Create</button>\n            </div>\n        );\n    }\n}"]},"metadata":{},"sourceType":"module"}